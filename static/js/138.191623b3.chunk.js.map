{"version":3,"file":"static/js/138.191623b3.chunk.js","mappings":"wKAEaA,E,QAAeC,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gZAYzB,SAACC,GAAK,MACH,cAAfA,EAAMC,KACF,8DACA,gCAAgC,IAClB,SAACD,GACnB,OAAQA,EAAMC,MACZ,IAAK,YACH,MAAO,UACT,IAAK,SACH,MAAO,SACT,QACE,MAAO,UAEb,IAKsB,SAACD,GAAK,MACT,cAAfA,EAAMC,KAAuB,UAAY,oBAAoB,I,SC/BtDC,EAAS,SAAHC,GAA2B,IAArBF,EAAIE,EAAJF,KAAMG,EAAOD,EAAPC,QAC7B,OACEC,EAAAA,EAAAA,KAACT,EAAY,CAACQ,QAASA,EAASH,KAAMA,EAAKK,SACxCL,GAGP,C,8wCCFaM,EAAOV,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,w2CAWHS,EAAkBC,EAyBhBD,EAAkBE,GAiBjCC,EAASd,EAAAA,GAAAA,IAAUe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,kXAqBnBc,EAAiBhB,EAAAA,GAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,qVAa3BgB,EAAOlB,EAAAA,GAAAA,IAAUmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,wKAUjBkB,EAAapB,EAAAA,GAAAA,EAAQqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,oMAUrBoB,GAAatB,EAAAA,EAAAA,IAAOuB,EAAAA,GAAPvB,CAAewB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,oC,SClDzC,MAjDA,SAAkBI,GAAY,IAATmB,EAAInB,EAAJmB,KACbC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAYjB,OACEC,EAAAA,EAAAA,MAACpB,EAAI,CAAAD,SAAA,EACHD,EAAAA,EAAAA,KAACQ,EAAc,CAAAP,UACbD,EAAAA,EAAAA,KAACc,EAAU,CAACS,GAAE,WAAAC,OAAaP,EAAKQ,IAAMC,MAAO,CAAEC,KAAMT,GAAWjB,UAC9DD,EAAAA,EAAAA,KAACM,EAAM,CAACsB,IAAKX,EAAKY,OAAQC,IAAKb,EAAKc,YAIxCT,EAAAA,EAAAA,MAACZ,EAAI,CAAAT,SAAA,EACHqB,EAAAA,EAAAA,MAACV,EAAU,CAAAX,SAAA,EACTD,EAAAA,EAAAA,KAACgC,EAAAA,GAAa,CACZC,MAAOhB,EAAKiB,OACZC,YAAa,OACbC,mBAAmB,IAEJ,IAAhBnB,EAAKiB,OAAe,SAAW,cAElCZ,EAAAA,EAAAA,MAACV,EAAU,CAAAX,SAAA,EACTD,EAAAA,EAAAA,KAACgC,EAAAA,GAAa,CACZC,MAAOhB,EAAKoB,UACZF,YAAa,OACbC,mBAAmB,IAClB,IACc,IAAhBnB,EAAKiB,OAAe,WAAa,gBAGpClC,EAAAA,EAAAA,KAACH,EAAAA,EAAM,CACLD,KAAMqB,EAAKqB,YAAc,YAAc,SACvCvC,QAtCkB,WACxBqB,GACEmB,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTvB,GAAI,IACPqB,aAAcrB,EAAKqB,YACnBD,UAAWpB,EAAKoB,WAAapB,EAAKqB,aAAe,EAAI,MAG3D,SAmCF,C,+KC3DaG,EAAOjD,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8aAyBhBgD,EAAYlD,EAAAA,GAAAA,IAAUe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,kC,SCgCnC,I,UAAA,EA7CA,WACE,IAAAiD,GAAwBC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACdzB,GAAWC,EAAAA,EAAAA,MACX4B,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAkBF,EAAAA,EAAAA,IAAYG,EAAAA,IAC9BC,GAASJ,EAAAA,EAAAA,IAAYK,EAAAA,IACrBC,GAAYN,EAAAA,EAAAA,IAAYO,EAAAA,IAExBC,EAAQC,OAAOC,WAAa,IAAM,EAAI,EAsB5C,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBAMvB,OALA3C,GAAS4C,EAAAA,EAAAA,IAAiB,CAAEjB,KAAM,EAAGW,MAAAA,GAASI,EAAWG,SAASC,OAChE,SAACC,GACCC,QAAQC,MAAMF,EAChB,IAEK,kBAAML,EAAWQ,OAAQ,CAClC,GAAG,CAAClD,EAAUkC,EAAQI,KAapBpC,EAAAA,EAAAA,MAACoB,EAAS,CAAAzC,SAAA,EACRD,EAAAA,EAAAA,KAACyC,EAAI,CAAAxC,SACG,OAALgD,QAAK,IAALA,OAAK,EAALA,EAAOsB,KAAI,SAACtD,GAAI,OACfjB,EAAAA,EAAAA,KAACwE,EAAAA,EAAS,CAAevD,KAAMA,GAAfA,EAAKQ,GAAkB,MAG1C+B,IAAaxD,EAAAA,EAAAA,KAACyE,EAAAA,EAAM,CAAC1B,KAAK,WAC1BE,EAAMyB,OAAS,GAAKtB,IAAoBH,EAAMyB,SAC7C1E,EAAAA,EAAAA,KAACH,EAAAA,EAAM,CAACD,KAAK,YAAYG,QAnBR,WACrBqB,GAAS4C,EAAAA,EAAAA,IAAiB,CAAEjB,KAAMA,EAAO,EAAGW,MAAAA,KACzCiB,MAAK,WACJ3B,EAAQD,EAAO,EACjB,IACCmB,OAAM,SAACC,GACNC,QAAQC,MAAMF,EAChB,GACJ,MAeF,E,wCCnDaS,EAAW,WACtB,IAAMxD,GAAWC,EAAAA,EAAAA,MACXiC,GAASJ,EAAAA,EAAAA,IAAYK,EAAAA,IAS3B,OACEvD,EAAAA,EAAAA,KAAA6E,EAAAA,SAAA,CAAA5E,UACED,EAAAA,EAAAA,KAAC8E,EAAAA,EAAe,CACdrD,GAAI6B,EAAOrB,MACXF,KAAMuB,EAAOyB,MACbC,aAAcC,EAAAA,EAAAA,GACdC,gBAAgB,EAChBC,QAASF,EAAAA,EACTG,eAAgB,SAACC,GAAM,OACrB1B,OAAOC,WAAa,IAAMyB,EAAON,MAAK,QAAAvD,OAAW6D,EAAON,MAAO,EAEjEO,eAAgB,SAACD,GAAM,OAAKA,EAAOpD,KAAK,EACxCsD,SAAU,SAACC,IApBU,SAAClC,GAK1BlC,EAJKkC,GAIImC,EAAAA,EAAAA,GAAenC,IAHbmC,EAAAA,EAAAA,GAAeR,EAAAA,EAAAA,IAI5B,CAeQS,CAAmBF,EACrB,EACAG,YAAY,UACZC,cAAc,EACdC,WAAY,WACVzE,GAASqE,EAAAA,EAAAA,GAAeR,EAAAA,EAAAA,IAC1B,EACAa,0BAA0B,EAC1BC,OAAQ,CACNC,QAAS,SAACC,GAAU,OAAAzD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfyD,GAAU,IACbC,MAAOvC,OAAOC,WAAa,IAAM,QAAU,QAC3CuC,aAAc,OACdC,gBAAiB,OACjBC,OAAQ,oBACR,UAAW,CACTC,YAAa,WAEf,UAAW,CACTA,YAAa,WAEf,iBAAkB,CAChBA,YAAa,UACbC,QAAS,SACV,EAEHC,KAAM,SAACP,GAAU,OAAAzD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZyD,GAAU,IACbQ,UAAW,gCACXN,aAAc,OAAK,EAErBd,OAAQ,SAACY,EAAYvE,GAAK,OAAAc,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACrByD,GAAU,IACbS,SAAU,SACVC,MAAOjF,EAAMkF,WAAa,OAAS,OACnCR,gBAAiB1E,EAAMkF,WAAa,UAAY,OAChD,UAAW,CACTR,gBAAiB1E,EAAMkF,WAAa,UAAY,UAChDD,MAAO,SACR,EAEHE,MAAO,SAACZ,GAAU,OAAAzD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbyD,GAAU,IACbU,MAAO,OACPJ,QAAS,QAAM,MAM3B,E,oBC5EaO,GAAkBtH,EAAAA,EAAAA,IAAOuH,EAAAA,IAAPvH,CAAqBC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iDAKvCsH,GAAgBxH,EAAAA,EAAAA,IAAOuB,EAAAA,GAAPvB,CAAee,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,4UAoB/BuH,EAAQzH,EAAAA,GAAAA,GAASiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,8JAWjBwH,EAAU1H,EAAAA,GAAAA,IAAUmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,mMAYpByH,EAAe3H,EAAAA,GAAAA,IAAUqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,4NCRtC,EA9Be,WACb,IAAM0B,GAAWC,EAAAA,EAAAA,MACXiC,GAASJ,EAAAA,EAAAA,IAAYK,EAAAA,IAY3B,OAVAM,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBAMvB,OALA3C,GAASgG,EAAAA,EAAAA,IAAmB,CAAE9D,OAAAA,EAAQW,OAAQH,EAAWG,UAAWC,OAClE,SAACC,GACCC,QAAQC,MAAMF,EAChB,IAEK,kBAAML,EAAWQ,OAAQ,CAClC,GAAG,CAAClD,EAAUkC,KAGZhC,EAAAA,EAAAA,MAAAuD,EAAAA,SAAA,CAAA5E,SAAA,EACEqB,EAAAA,EAAAA,MAAC4F,EAAO,CAAAjH,SAAA,EACND,EAAAA,EAAAA,KAACgH,EAAa,CAACzF,GAAG,IAAGtB,UACnBD,EAAAA,EAAAA,KAAC8G,EAAe,OAElB9G,EAAAA,EAAAA,KAACiH,EAAK,CAAAhH,SAAC,eAETD,EAAAA,EAAAA,KAACmH,EAAY,CAAAlH,UACXD,EAAAA,EAAAA,KAAC4E,EAAQ,OAEX5E,EAAAA,EAAAA,KAACqH,EAAQ,MAGf,C,8OCtCahE,EAAmB,SAAC3B,GAAK,OAAKA,EAAMuB,MAAMqE,SAAU,EAQpD/D,EAAe,SAAC7B,GAAK,OAAKA,EAAM6F,OAAQ,EAExCpE,GAAsBqE,EAAAA,EAAAA,IACjC,CAbyB,SAAC9F,GAAK,OAAKA,EAAMuB,MAAMwE,KAAM,EAaxClE,IACd,SAACN,EAAOK,GACN,OAAQA,EAAOrB,OACb,IAAK,MACH,OAAOgB,EACT,IAAK,WACH,OAAOA,EAAMK,QAAO,SAACrC,GAAI,OAAKA,EAAKqB,WAAW,IAChD,IAAK,cACH,OAAOW,EAAMK,QAAO,SAACrC,GAAI,OAAMA,EAAKqB,WAAW,IACjD,QACE,OAEN,IAGWoF,EAAoB,SAAChG,GAAK,OAAKA,EAAMuB,MAAM0E,YAAa,EAExDC,EAA2B,SAAClG,GAAK,OAC5CA,EAAMuB,MAAM4E,kBAAmB,EAEpBC,EAA8B,SAACpG,GAAK,OAC/CA,EAAMuB,MAAM8E,qBAAsB,EAEvBC,EAAiB,SAACtG,GAAK,OAAKA,EAAMuB,MAAMgF,QAAS,EAEjDxE,EAAkB,SAAC/B,GAAK,OAAKA,EAAMuB,MAAMO,SAAU,C","sources":["components/Button/Button.styled.js","components/Button/Button.js","components/TweetCard/TweetCard.styled.js","components/TweetCard/TweetCard.js","components/CardList/CardList.styled.js","components/CardList/CardList.js","components/DropDown.js","pages/Tweets/Tweets.styled.js","pages/Tweets/Tweets.js","redux/selectors.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledButton = styled.button`\n  width: fit-content;\n  margin: 0 auto;\n  padding: 14px 56px;\n  font-family: \"Montserrat\", sans-serif;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 24.38px;\n  text-transform: uppercase;\n  color: #373737;\n  border-radius: 10.31px;\n  border: none;\n  box-shadow: ${(props) =>\n    props.text === \"Load more\"\n      ? \"0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08)\"\n      : \"0px 3.44px rgba(0, 0, 0, 0.25)\"};\n  background-color: ${(props) => {\n    switch (props.text) {\n      case \"Load more\":\n        return \"#f1c232\";\n      case \"Follow\":\n        return \"ebd8ff\";\n      default:\n        return \"#5CD3A8\";\n    }\n  }};\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: ${(props) =>\n      props.text === \"Load more\" ? \"#e7bb44\" : \"rgb(86, 166, 141);\"};\n  }\n`;\n","import { StyledButton } from \"./Button.styled\";\n\nexport const Button = ({ text, onClick }) => {\n  return (\n    <StyledButton onClick={onClick} text={text}>\n      {text}\n    </StyledButton>\n  );\n};\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport logoGoIT from \"../../assets/logoGoIT.png\";\nimport backgroundImagex1 from \"../../assets/background-image-x1.png\";\nimport backgroundImagex2 from \"../../assets/background-image-x2.png\";\n\nexport const Card = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  position: relative;\n  max-width: 380px;\n  height: 460px;\n  padding-top: 178px;\n  box-sizing: border-box;\n  border-radius: 20px;\n  background-color: #5736a3;\n  background-image: url(${logoGoIT}), url(${backgroundImagex1}),\n    linear-gradient(to bottom, #471ca9 0%, #5736a3 69.1%, #4b2a99 100%);\n  background-repeat: no-repeat;\n  background-position: 20px 20px, 36px 28px, 100%;\n  background-size: 76px 22px, 308px 168px, 100%;\n  box-shadow: -2.58px 6.87px 20.62px rgba(0, 0, 0, 0.23);\n\n  @media screen and (max-width: 379px) {\n    min-width: 300px;\n  }\n\n  @media screen and (min-width: 380px) {\n    width: 380px;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 20px) / 2);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc((100% - 30px * 2) / 3);\n  }\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${logoGoIT}), url(${backgroundImagex2}),\n      linear-gradient(to bottom, #471ca9 0%, #5736a3 69.1%, #4b2a99 100%);\n  }\n\n  ::before {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    height: 8px;\n    left: 0px;\n    top: 214px;\n    background: #ebd8ff;\n    box-shadow: inset 0 3.44px 2.58px #fbf8ff,\n      0 3.44px 3.44px rgba(0, 0, 0, 0.06), inset 0 -1.72px 3.44px #ae7be3;\n  }\n`;\n\nexport const Avatar = styled.img`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 62px;\n  height: 62px;\n  display: block;\n  margin: 0 auto;\n  object-fit: cover;\n  border-radius: 50%;\n  overflow: hidden;\n  background-color: rgb(235, 216, 255);\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 62px;\n    height: 62px;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  position: relative;\n  width: 80px;\n  height: 80px;\n  margin: 0 auto;\n  background-color: rgb(235, 216, 255);\n  box-shadow: rgba(0, 0, 0, 0.06) 0px 4.39163px 4.39163px,\n    rgb(174, 123, 227) 0px -2.19582px 4.39163px inset,\n    rgb(251, 248, 255) 0px 4.39163px 3.29372px inset;\n  border-radius: 85.9232px;\n  z-index: 1;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 16px;\n  justify-content: center;\n  align-items: center;\n  margin: 26px auto 36px;\n`;\n\nexport const StyledText = styled.p`\n  font-family: \"Montserrat\", sans-serif;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 24.38px;\n  color: rgba(235, 216, 255, 1);\n  text-transform: uppercase;\n  margin: 0;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n`;\n","import { NumericFormat } from \"react-number-format\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleFollow } from \"redux/operations\";\nimport { useLocation } from \"react-router-dom\";\nimport { Button } from \"components/Button/Button\";\nimport {\n  Card,\n  Avatar,\n  Info,\n  StyledText,\n  ImageContainer,\n  StyledLink,\n} from \"./TweetCard.styled\";\n\nfunction TweetCard({ user }) {\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const handleFollowClick = () => {\n    dispatch(\n      toggleFollow({\n        ...user,\n        isFollowing: !user.isFollowing,\n        followers: user.followers + (user.isFollowing ? -1 : 1),\n      })\n    );\n  };\n\n  return (\n    <Card>\n      <ImageContainer>\n        <StyledLink to={`/tweets/${user.id}`} state={{ from: location }}>\n          <Avatar src={user.avatar} alt={user.name} />\n        </StyledLink>\n      </ImageContainer>\n\n      <Info>\n        <StyledText>\n          <NumericFormat\n            value={user.tweets}\n            displayType={\"text\"}\n            thousandSeparator={true}\n          />\n          {user.tweets === 1 ? \" tweet\" : \" tweets\"}\n        </StyledText>\n        <StyledText>\n          <NumericFormat\n            value={user.followers}\n            displayType={\"text\"}\n            thousandSeparator={true}\n          />{\" \"}\n          {user.tweets === 1 ? \"follower\" : \"followers\"}\n        </StyledText>\n\n        <Button\n          text={user.isFollowing ? \"Following\" : \"Follow\"}\n          onClick={handleFollowClick}\n        ></Button>\n      </Info>\n    </Card>\n  );\n}\n\nexport default TweetCard;\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: start;\n  text-decoration: none;\n  list-style: none;\n  margin-bottom: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0;\n  gap: 30px;\n\n  @media screen and (max-width: 767px) {\n    justify-content: center;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    gap: 30px;\n  }\n`;\n\nexport const Container = styled.div`\n  margin-bottom: 30px;\n`;\n","import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchUsersByPage } from \"../../redux/operations\";\nimport {\n  selectFilteredUsers,\n  selectUsersCount,\n  selectFilter,\n  selectIsLoading,\n} from \"../../redux/selectors\";\nimport Loader from \"components/Skeleton\";\nimport TweetCard from \"../TweetCard/TweetCard\";\nimport { Button } from \"components/Button/Button\";\nimport { List, Container } from \"./CardList.styled\";\n\nfunction CardList() {\n  const [page, setPage] = useState(1);\n  const dispatch = useDispatch();\n  const users = useSelector(selectFilteredUsers);\n  const totalUsersCount = useSelector(selectUsersCount);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n\n  const limit = window.innerWidth < 768 ? 3 : 6;\n\n  useEffect(() => {\n    const controller = new AbortController();\n    dispatch(fetchUsersByPage({ page: 1, limit }, controller.signal)).catch(\n      (err) => {\n        console.error(err);\n      }\n    );\n    return () => controller.abort();\n  }, [dispatch, filter, limit]);\n\n  const handleLoadMore = () => {\n    dispatch(fetchUsersByPage({ page: page + 1, limit }))\n      .then(() => {\n        setPage(page + 1);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <Container>\n      <List>\n        {users?.map((user) => (\n          <TweetCard key={user.id} user={user} />\n        ))}\n      </List>\n      {isLoading && <Loader page=\"/cards\" />}\n      {users.length > 0 && totalUsersCount !== users.length && (\n        <Button text=\"Load more\" onClick={handleLoadMore} />\n      )}\n    </Container>\n  );\n}\n\nexport default CardList;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { setFilterValue } from \"redux/filtersSlice\";\nimport { selectFilter } from \"redux/selectors\";\nimport { filterOptions } from \"../redux/contants\";\nimport CreatableSelect from \"react-select/creatable\";\n\nexport const Dropdown = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleFilterChange = (filter) => {\n    if (!filter) {\n      dispatch(setFilterValue(filterOptions[0]));\n      return;\n    }\n    dispatch(setFilterValue(filter));\n  };\n\n  return (\n    <>\n      <CreatableSelect\n        id={filter.value}\n        name={filter.label}\n        defaultValue={filterOptions[0]}\n        defaultChecked={true}\n        options={filterOptions}\n        getOptionLabel={(option) =>\n          window.innerWidth < 768 ? option.label : `Show ${option.label}`\n        }\n        getOptionValue={(option) => option.value}\n        onChange={(selectedOption) => {\n          handleFilterChange(selectedOption);\n        }}\n        placeholder=\"Show...\"\n        isSearchable={true}\n        clearValue={() => {\n          dispatch(setFilterValue(filterOptions[0]));\n        }}\n        controlShouldRenderValue={true}\n        styles={{\n          control: (baseStyles) => ({\n            ...baseStyles,\n            width: window.innerWidth < 768 ? \"155px\" : \"200px\",\n            borderRadius: \"25px\",\n            backgroundColor: \"#fff\",\n            border: \"2px solid #bcb5d2\",\n            \"&:hover\": {\n              borderColor: \"#7458b2\",\n            },\n            \"&:focus\": {\n              borderColor: \"#7458b2\",\n            },\n            \"&:focus-within\": {\n              borderColor: \"#7458b2\",\n              outline: \"none\",\n            },\n          }),\n          menu: (baseStyles) => ({\n            ...baseStyles,\n            boxShadow: \"0 0 10px 0 rgba(0, 0, 0, 0.1)\",\n            borderRadius: \"6px\",\n          }),\n          option: (baseStyles, state) => ({\n            ...baseStyles,\n            overflow: \"hidden\",\n            color: state.isSelected ? \"#fff\" : \"#333\",\n            backgroundColor: state.isSelected ? \"#56a68d\" : \"#fff\",\n            \"&:hover\": {\n              backgroundColor: state.isSelected ? \"#56a68d\" : \"#8cbfb9\",\n              color: \"#fff\",\n            },\n          }),\n          input: (baseStyles) => ({\n            ...baseStyles,\n            color: \"#333\",\n            outline: \"none\",\n          }),\n        }}\n      />\n    </>\n  );\n};\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { IoMdArrowBack } from \"react-icons/io\";\n\nexport const StyledArrowIcon = styled(IoMdArrowBack)`\n  font-size: 25px;\n  color: #5736a3;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: flex;\n  align-items: baseline;\n  justify-content: left;\n  padding: 5px;\n  margin: 0;\n  text-align: start;\n  background-color: #f1c232;\n  border-radius: 50%;\n\n  :hover {\n    color: #2b278c;\n    background-color: #e7bb44;\n  }\n\n  @media screen and (min-width: 1200px) {\n    margin-left: 15px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 24px;\n  text-align: center;\n  padding: 0;\n  margin: 0 auto;\n\n  @media screen and (max-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  margin-top: 30px;\n  align-items: center;\n\n  @media screen and (max-width: 1199px) {\n    margin: 20px 20px 0;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  margin-top: 30px;\n  align-items: center;\n  justify-content: end;\n\n  @media screen and (max-width: 1199px) {\n    margin: 20px 20px 0;\n  }\n`;\n","import CardList from \"components/CardList/CardList\";\nimport { Dropdown } from \"components/DropDown\";\nimport {\n  StyledArrowIcon,\n  StyledNavLink,\n  Title,\n  Wrapper,\n  InputWrapper,\n} from \"./Tweets.styled\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchFilteredUsers } from \"redux/operations\";\nimport { selectFilter } from \"redux/selectors\";\n\nconst Tweets = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    dispatch(fetchFilteredUsers({ filter, signal: controller.signal })).catch(\n      (err) => {\n        console.error(err);\n      }\n    );\n    return () => controller.abort();\n  }, [dispatch, filter]);\n\n  return (\n    <>\n      <Wrapper>\n        <StyledNavLink to=\"/\">\n          <StyledArrowIcon />\n        </StyledNavLink>\n        <Title>Tweets</Title>\n      </Wrapper>\n      <InputWrapper>\n        <Dropdown />\n      </InputWrapper>\n      <CardList></CardList>\n    </>\n  );\n};\n\nexport default Tweets;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectUsers = (state) => state.users.items;\n\nexport const selectUsersCount = (state) => state.users.userCount;\n\nexport const selectFollowingUsers = (state) =>\n  state.users.items?.filter((user) => user.isFollowing);\n\nexport const selectNotFollowingUsers = (state) =>\n  state.users.items?.filter((user) => !user.isFollowing);\n\nexport const selectFilter = (state) => state.filters;\n\nexport const selectFilteredUsers = createSelector(\n  [selectUsers, selectFilter],\n  (users, filter) => {\n    switch (filter.value) {\n      case \"all\":\n        return users;\n      case \"followed\":\n        return users.filter((user) => user.isFollowing);\n      case \"notFollowed\":\n        return users.filter((user) => !user.isFollowing);\n      default:\n        return;\n    }\n  }\n);\n\nexport const selectSeletedUser = (state) => state.users.selectedUser;\n\nexport const selectUserWithMostTweets = (state) =>\n  state.users.userWithMostTweets;\n\nexport const selectUserWithMostFollowers = (state) =>\n  state.users.userWithMostFollowers;\n\nexport const selectAllUsers = (state) => state.users.allUsers;\n\nexport const selectIsLoading = (state) => state.users.isLoading;\n\nexport const selectError = (state) => state.users.error;\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","props","text","Button","_ref","onClick","_jsx","children","Card","logoGoIT","backgroundImagex1","backgroundImagex2","Avatar","_templateObject2","ImageContainer","_templateObject3","Info","_templateObject4","StyledText","_templateObject5","StyledLink","NavLink","_templateObject6","user","location","useLocation","dispatch","useDispatch","_jsxs","to","concat","id","state","from","src","avatar","alt","name","NumericFormat","value","tweets","displayType","thousandSeparator","followers","isFollowing","toggleFollow","_objectSpread","List","Container","_useState","useState","_useState2","_slicedToArray","page","setPage","users","useSelector","selectFilteredUsers","totalUsersCount","selectUsersCount","filter","selectFilter","isLoading","selectIsLoading","limit","window","innerWidth","useEffect","controller","AbortController","fetchUsersByPage","signal","catch","err","console","error","abort","map","TweetCard","Loader","length","then","Dropdown","_Fragment","CreatableSelect","label","defaultValue","filterOptions","defaultChecked","options","getOptionLabel","option","getOptionValue","onChange","selectedOption","setFilterValue","handleFilterChange","placeholder","isSearchable","clearValue","controlShouldRenderValue","styles","control","baseStyles","width","borderRadius","backgroundColor","border","borderColor","outline","menu","boxShadow","overflow","color","isSelected","input","StyledArrowIcon","IoMdArrowBack","StyledNavLink","Title","Wrapper","InputWrapper","fetchFilteredUsers","CardList","userCount","filters","createSelector","items","selectSeletedUser","selectedUser","selectUserWithMostTweets","userWithMostTweets","selectUserWithMostFollowers","userWithMostFollowers","selectAllUsers","allUsers"],"sourceRoot":""}