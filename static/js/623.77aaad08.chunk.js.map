{"version":3,"file":"static/js/623.77aaad08.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.js","components/TweetCard/TweetCard.styled.js","components/TweetCard/TweetCard.js","pages/Home/Home.styled.js","pages/Home/Home.js","redux/selectors.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledButton = styled.button`\n  width: fit-content;\n  margin: 0 auto;\n  padding: 14px 56px;\n  font-family: \"Montserrat\", sans-serif;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 24.38px;\n  text-transform: uppercase;\n  color: #373737;\n  border-radius: 10.31px;\n  border: none;\n  box-shadow: ${(props) =>\n    props.text === \"Load more\"\n      ? \"0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08)\"\n      : \"0px 3.44px rgba(0, 0, 0, 0.25)\"};\n  background-color: ${(props) => {\n    switch (props.text) {\n      case \"Load more\":\n        return \"#f1c232\";\n      case \"Follow\":\n        return \"ebd8ff\";\n      default:\n        return \"#5CD3A8\";\n    }\n  }};\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: ${(props) =>\n      props.text === \"Load more\" ? \"#e7bb44\" : \"rgb(86, 166, 141);\"};\n  }\n`;\n","import { StyledButton } from \"./Button.styled\";\n\nexport const Button = ({ text, onClick, disabled = false }) => {\n  return (\n    <StyledButton onClick={onClick} disabled={disabled} text={text}>\n      {text}\n    </StyledButton>\n  );\n};\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport logoGoIT from \"../../assets/logoGoIT.png\";\nimport backgroundImagex1 from \"../../assets/background-image-x1.png\";\nimport backgroundImagex2 from \"../../assets/background-image-x2.png\";\n\nexport const Card = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  position: relative;\n  max-width: 380px;\n  height: 460px;\n  padding-top: 178px;\n  box-sizing: border-box;\n  border-radius: 20px;\n  background-color: #5736a3;\n  background-image: url(${logoGoIT}), url(${backgroundImagex1}),\n    linear-gradient(to bottom, #471ca9 0%, #5736a3 69.1%, #4b2a99 100%);\n  background-repeat: no-repeat;\n  background-position: 20px 20px, 36px 28px, 100%;\n  background-size: 76px 22px, 308px 168px, 100%;\n  box-shadow: -2.58px 6.87px 20.62px rgba(0, 0, 0, 0.23);\n\n  @media screen and (max-width: 379px) {\n    min-width: 300px;\n  }\n\n  @media screen and (min-width: 380px) {\n    width: 380px;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 20px) / 2);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc((100% - 30px * 2) / 3);\n  }\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${logoGoIT}), url(${backgroundImagex2}),\n      linear-gradient(to bottom, #471ca9 0%, #5736a3 69.1%, #4b2a99 100%);\n  }\n\n  ::before {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    height: 8px;\n    left: 0px;\n    top: 214px;\n    background: #ebd8ff;\n    box-shadow: inset 0 3.44px 2.58px #fbf8ff,\n      0 3.44px 3.44px rgba(0, 0, 0, 0.06), inset 0 -1.72px 3.44px #ae7be3;\n  }\n`;\n\nexport const Avatar = styled.img`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 62px;\n  height: 62px;\n  display: block;\n  margin: 0 auto;\n  object-fit: cover;\n  border-radius: 50%;\n  overflow: hidden;\n  background-color: rgb(235, 216, 255);\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 62px;\n    height: 62px;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  position: relative;\n  width: 80px;\n  height: 80px;\n  margin: 0 auto;\n  background-color: rgb(235, 216, 255);\n  box-shadow: rgba(0, 0, 0, 0.06) 0px 4.39163px 4.39163px,\n    rgb(174, 123, 227) 0px -2.19582px 4.39163px inset,\n    rgb(251, 248, 255) 0px 4.39163px 3.29372px inset;\n  border-radius: 85.9232px;\n  z-index: 1;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 16px;\n  justify-content: center;\n  align-items: center;\n  margin: 26px auto 36px;\n`;\n\nexport const StyledText = styled.p`\n  font-family: \"Montserrat\", sans-serif;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 24.38px;\n  color: rgba(235, 216, 255, 1);\n  text-transform: uppercase;\n  margin: 0;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n`;\n","import { NumericFormat } from \"react-number-format\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleFollow } from \"redux/operations\";\nimport { useLocation } from \"react-router-dom\";\nimport { Button } from \"components/Button/Button\";\nimport {\n  Card,\n  Avatar,\n  Info,\n  StyledText,\n  ImageContainer,\n  StyledLink,\n} from \"./TweetCard.styled\";\n\nfunction TweetCard({ user }) {\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const handleFollowClick = () => {\n    dispatch(\n      toggleFollow({\n        ...user,\n        isFollowing: !user.isFollowing,\n        followers: user.isFollowing ? user.followers - 1 : user.followers + 1,\n      })\n    );\n  };\n\n  return (\n    <Card>\n      <ImageContainer>\n        <StyledLink to={`/tweets/${user.id}`} state={{ from: location }}>\n          <Avatar src={user.avatar} alt={user.name} />\n        </StyledLink>\n      </ImageContainer>\n\n      <Info>\n        <StyledText>\n          <NumericFormat\n            value={user.tweets}\n            displayType={\"text\"}\n            thousandSeparator={true}\n          />\n          {user.tweets === 1 ? \" tweet\" : \" tweets\"}\n        </StyledText>\n        <StyledText>\n          <NumericFormat\n            value={user.followers}\n            displayType={\"text\"}\n            thousandSeparator={true}\n          />{\" \"}\n          {user.tweets === 1 ? \"follower\" : \"followers\"}\n        </StyledText>\n\n        <Button\n          text={user.isFollowing ? \"Following\" : \"Follow\"}\n          onClick={handleFollowClick}\n        ></Button>\n      </Info>\n    </Card>\n  );\n}\n\nexport default TweetCard;\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const CardList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin: 20px auto;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  width: fit-content;\n  padding: 14px 56px;\n  font-family: \"Montserrat\", sans-serif;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 24.38px;\n  text-transform: uppercase;\n  color: #373737;\n  border-radius: 10.31px;\n  border: none;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08);\n  background-color: #f1c232;\n  text-decoration: none;\n  cursor: pointer;\n  margin: 20px auto;\n  display: block;\n\n  :hover,\n  :focus {\n    background-color: #e7bb44;\n  }\n\n  :active {\n    background-color: #e7bb44;\n  }\n`;\n\nexport const Container = styled.div``;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getUserWithMostFollowers,\n  getUserWithMostTweets,\n  getAllUsers,\n} from \"redux/operations\";\nimport {\n  selectUserWithMostTweets,\n  selectUserWithMostFollowers,\n  selectAllUsers,\n} from \"redux/selectors\";\nimport TweetCard from \"components/TweetCard/TweetCard\";\nimport { Container, CardList, StyledNavLink } from \"./Home.styled\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const users = useSelector(selectAllUsers);\n  const mostActiveUser = useSelector(selectUserWithMostTweets);\n  const mostPopularUser = useSelector(selectUserWithMostFollowers);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    dispatch(\n      getAllUsers({\n        signal: controller.signal,\n      })\n    ).catch((err) => {\n      console.error(err);\n    });\n    return () => controller.abort();\n  }, [dispatch, mostActiveUser, mostPopularUser]);\n\n  useEffect(() => {\n    dispatch(getUserWithMostFollowers(users));\n    dispatch(getUserWithMostTweets(users));\n  }, [dispatch, users]);\n\n  return (\n    <Container>\n      <h2>Check the most popular and active users: </h2>\n      {users && (\n        <CardList>\n          {mostPopularUser && <TweetCard user={mostPopularUser} />}\n          {mostActiveUser && <TweetCard user={mostActiveUser} />}\n        </CardList>\n      )}\n      <StyledNavLink to=\"/tweets\">Go to tweets</StyledNavLink>\n    </Container>\n  );\n};\n\nexport default Home;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectUsers = (state) => state.users.items;\n\nexport const selectUsersCount = (state) => state.users.userCount;\n\nexport const selectFollowingUsers = (state) =>\n  state.users.items?.filter((user) => user.isFollowing);\n\nexport const selectNotFollowingUsers = (state) =>\n  state.users.items?.filter((user) => !user.isFollowing);\n\nexport const selectFilter = (state) => state.filters;\n\nexport const selectFilteredUsers = createSelector(\n  [selectUsers, selectFilter],\n  (users, filter) => {\n    switch (filter.value) {\n      case \"all\":\n        return users;\n      case \"followed\":\n        return users.filter((user) => user.isFollowing);\n      case \"notFollowed\":\n        return users.filter((user) => !user.isFollowing);\n      default:\n        return;\n    }\n  }\n);\n\nexport const selectSeletedUser = (state) => state.users.selectedUser;\n\nexport const selectUserWithMostTweets = (state) =>\n  state.users.userWithMostTweets;\n\nexport const selectUserWithMostFollowers = (state) =>\n  state.users.userWithMostFollowers;\n\nexport const selectAllUsers = (state) => state.users.allUsers;\n\n/* export const selectFilteredAllUsers = createSelector(\n  [selectUsers, selectFilterValue],\n  (users, filterValue) => {\n    return users.filter(user => {\n      return (\n        user.name.toLowerCase().includes(filterValue.toLowerCase().trim()) ||\n        user.nickname.includes(filterValue.toLowerCase().trim())\n      );\n    });\n  }\n); */\n\nexport const selectIsLoading = (state) => state.users.isLoading;\n\nexport const selectError = (state) => state.users.error;\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","props","text","Button","_ref","onClick","_ref$disabled","disabled","_jsx","children","Card","logoGoIT","backgroundImagex1","backgroundImagex2","Avatar","_templateObject2","ImageContainer","_templateObject3","Info","_templateObject4","StyledText","_templateObject5","StyledLink","NavLink","_templateObject6","user","location","useLocation","dispatch","useDispatch","_jsxs","to","concat","id","state","from","src","avatar","alt","name","NumericFormat","value","tweets","displayType","thousandSeparator","followers","isFollowing","toggleFollow","_objectSpread","CardList","StyledNavLink","Container","users","useSelector","selectAllUsers","mostActiveUser","selectUserWithMostTweets","mostPopularUser","selectUserWithMostFollowers","useEffect","controller","AbortController","getAllUsers","signal","catch","err","console","error","abort","getUserWithMostFollowers","getUserWithMostTweets","TweetCard","selectUsersCount","userCount","selectFilter","filters","selectFilteredUsers","createSelector","items","filter","selectSeletedUser","selectedUser","userWithMostTweets","userWithMostFollowers","allUsers","selectIsLoading","isLoading"],"sourceRoot":""}