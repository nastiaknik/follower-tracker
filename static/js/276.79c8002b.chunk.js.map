{"version":3,"file":"static/js/276.79c8002b.chunk.js","mappings":"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","sources":["redux/selectors.js","components/Button/Button.styled.js","components/Button/Button.js","components/TweetCard/TweetCard.styled.js","components/TweetCard/TweetCard.js","components/CardList/CardList.styled.js","components/CardList/CardList.js","components/DropDown.js","pages/Tweets/Tweets.styled.js","pages/Tweets/Tweets.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectUsers = (state) => state.users.items;\n\nexport const selectUsersCount = (state) => state.users.userCount;\n\nexport const selectFollowingUsers = (state) =>\n  state.users.items?.filter((user) => user.isFollowing);\n\nexport const selectNotFollowingUsers = (state) =>\n  state.users.items?.filter((user) => !user.isFollowing);\n\nexport const selectFilter = (state) => state.filters;\n\nexport const selectFilteredUsers = createSelector(\n  [selectUsers, selectFilter],\n  (users, filter) => {\n    switch (filter.value) {\n      case \"all\":\n        return users;\n      case \"followed\":\n        return users.filter((user) => user.isFollowing);\n      case \"notFollowed\":\n        return users.filter((user) => !user.isFollowing);\n      default:\n        return;\n    }\n  }\n);\n\n/* export const selectFilteredAllUsers = createSelector(\n  [selectUsers, selectFilterValue],\n  (users, filterValue) => {\n    return users.filter(user => {\n      return (\n        user.name.toLowerCase().includes(filterValue.toLowerCase().trim()) ||\n        user.nickname.includes(filterValue.toLowerCase().trim())\n      );\n    });\n  }\n); */\n\n/* export const selectFilteredFollowingUsers = createSelector(\n  [selectFollowingUsers, selectFilterValue],\n  (following, filterValue) => {\n    return following.filter(user => {\n      return (\n        user.name.includes(filterValue.toLowerCase().trim()) ||\n        user.nickname.includes(filterValue.toLowerCase().trim())\n      );\n    });\n  }\n); */\n\n/* export const selectFilteredNotFollowingUsers = createSelector(\n  [selectNotFollowingUsers, selectFilterValue],\n  (notFollowing, filterValue) => {\n    return notFollowing.filter(user => {\n      return (\n        user.name.includes(filterValue.toLowerCase().trim()) ||\n        user.nickname.includes(filterValue.toLowerCase().trim())\n      );\n    });\n  }\n); */\n\nexport const selectIsLoading = (state) => state.users.isLoading;\n\nexport const selectError = (state) => state.users.error;\n","import styled from \"styled-components\";\n\nexport const StyledButton = styled.button`\n  width: fit-content;\n  margin: 0 auto;\n  padding: 14px 56px;\n  font-family: \"Montserrat\", sans-serif;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 24.38px;\n  text-transform: uppercase;\n  color: #373737;\n  border-radius: 10.31px;\n  border: none;\n  box-shadow: ${(props) =>\n    props.text === \"Load more\"\n      ? \"0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08)\"\n      : \"0px 3.44px rgba(0, 0, 0, 0.25)\"};\n  background-color: ${(props) => {\n    switch (props.text) {\n      case \"Load more\":\n        return \"#f1c232\";\n      case \"Follow\":\n        return \"ebd8ff\";\n      default:\n        return \"#5CD3A8\";\n    }\n  }};\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: ${(props) =>\n      props.text === \"Load more\" ? \"#e7bb44\" : \"rgb(86, 166, 141);\"};\n  }\n\n  :active {\n    background-color: ${(props) =>\n      props.text === \"Load more\" ? \"#e7bb44\" : \"rgb(86, 166, 141);\"};\n  }\n`;\n","import { StyledButton } from \"./Button.styled\";\n\nexport const Button = ({ text, onClick, disabled = false }) => {\n  return (\n    <StyledButton onClick={onClick} disabled={disabled} text={text}>\n      {text}\n    </StyledButton>\n  );\n};\n","import styled from \"styled-components\";\nimport logoGoIT from \"../../assets/logoGoIT.png\";\nimport backgroundImagex1 from \"../../assets/background-image-x1.png\";\nimport backgroundImagex2 from \"../../assets/background-image-x2.png\";\n\nexport const Card = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  position: relative;\n  max-width: 380px;\n  height: 460px;\n  padding-top: 178px;\n  box-sizing: border-box;\n  border-radius: 20px;\n  background-color: #5736a3;\n  background-image: url(${logoGoIT}), url(${backgroundImagex1}),\n    linear-gradient(to bottom, #471ca9 0%, #5736a3 69.1%, #4b2a99 100%);\n  background-repeat: no-repeat;\n  background-position: 20px 20px, 36px 28px, 100%;\n  background-size: 76px 22px, 308px 168px, 100%;\n  box-shadow: -2.58px 6.87px 20.62px rgba(0, 0, 0, 0.23);\n\n  @media screen and (max-width: 379px) {\n    min-width: 300px;\n  }\n\n  @media screen and (min-width: 380px) {\n    width: 380px;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 20px) / 2);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc((100% - 30px * 2) / 3);\n  }\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${logoGoIT}), url(${backgroundImagex2}),\n      linear-gradient(to bottom, #471ca9 0%, #5736a3 69.1%, #4b2a99 100%);\n  }\n\n  ::before {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    height: 8px;\n    left: 0px;\n    top: 214px;\n    background: #ebd8ff;\n    box-shadow: inset 0 3.44px 2.58px #fbf8ff,\n      0 3.44px 3.44px rgba(0, 0, 0, 0.06), inset 0 -1.72px 3.44px #ae7be3;\n  }\n`;\n\nexport const Avatar = styled.img`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 62px;\n  height: 62px;\n  display: block;\n  margin: 0 auto;\n  object-fit: cover;\n  border-radius: 50%;\n  overflow: hidden;\n  background-color: rgb(235, 216, 255);\n\n  @media (min-width: 768px) {\n    width: 62px;\n    height: 62px;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  position: relative;\n  width: 80px;\n  height: 80px;\n  margin: 0 auto;\n  background-color: rgb(235, 216, 255);\n  box-shadow: rgba(0, 0, 0, 0.06) 0px 4.39163px 4.39163px,\n    rgb(174, 123, 227) 0px -2.19582px 4.39163px inset,\n    rgb(251, 248, 255) 0px 4.39163px 3.29372px inset;\n  border-radius: 85.9232px;\n  z-index: 1;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 16px;\n  justify-content: center;\n  align-items: center;\n  margin: 26px auto 36px;\n`;\n\nexport const StyledText = styled.p`\n  font-family: \"Montserrat\", sans-serif;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 24.38px;\n  color: rgba(235, 216, 255, 1);\n  text-transform: uppercase;\n  margin: 0;\n`;\n","import { NumericFormat } from \"react-number-format\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleFollow } from \"redux/operations\";\nimport { Button } from \"components/Button/Button\";\nimport {\n  Card,\n  Avatar,\n  Info,\n  StyledText,\n  ImageContainer,\n} from \"./TweetCard.styled\";\n\nfunction TweetCard({ user }) {\n  const dispatcher = useDispatch();\n\n  const handleFollowClick = () => {\n    dispatcher(\n      toggleFollow({\n        ...user,\n        isFollowing: !user.isFollowing,\n        followers: user.isFollowing ? user.followers - 1 : user.followers + 1,\n      })\n    );\n  };\n\n  return (\n    <Card>\n      <ImageContainer>\n        <Avatar src={user.avatar} alt={user.name} />\n      </ImageContainer>\n\n      <Info>\n        <StyledText>\n          <NumericFormat\n            value={user.tweets}\n            displayType={\"text\"}\n            thousandSeparator={true}\n          />{\" \"}\n          tweets\n        </StyledText>\n        <StyledText>\n          <NumericFormat\n            value={user.followers}\n            displayType={\"text\"}\n            thousandSeparator={true}\n          />{\" \"}\n          followers\n        </StyledText>\n\n        <Button\n          text={user.isFollowing ? \"Following\" : \"Follow\"}\n          onClick={handleFollowClick}\n        ></Button>\n      </Info>\n    </Card>\n  );\n}\n\nexport default TweetCard;\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: start;\n  text-decoration: none;\n  list-style: none;\n  margin-bottom: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0;\n  gap: 30px;\n\n  @media screen and (max-width: 767px) {\n    justify-content: center;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    gap: 30px;\n  }\n`;\n\nexport const Container = styled.div`\n  margin-bottom: 30px;\n`;\n","import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchUsersByPage } from \"../../redux/operations\";\nimport {\n  selectFilteredUsers,\n  selectUsersCount,\n  selectFilter,\n  selectIsLoading,\n} from \"../../redux/selectors\";\nimport Loader from \"components/Skeleton\";\nimport TweetCard from \"../TweetCard/TweetCard\";\nimport { Button } from \"components/Button/Button\";\nimport { List, Container } from \"./CardList.styled\";\n\nfunction CardList() {\n  const [page, setPage] = useState(1);\n  const dispatch = useDispatch();\n  const users = useSelector(selectFilteredUsers);\n  const totalUsersCount = useSelector(selectUsersCount);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n\n  const limit = window.innerWidth < 768 ? 3 : 6;\n\n  useEffect(() => {\n    const controller = new AbortController();\n    dispatch(fetchUsersByPage({ page: 1, limit }, controller.signal)).catch(\n      (err) => {\n        console.error(err);\n      }\n    );\n    return () => controller.abort();\n  }, [dispatch, filter, limit]);\n\n  const handleLoadMore = () => {\n    dispatch(fetchUsersByPage({ page: page + 1, limit }))\n      .then(() => {\n        setPage(page + 1);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <Container>\n      <List>\n        {users?.map((user) => (\n          <TweetCard key={user.id} user={user} />\n        ))}\n      </List>\n      {isLoading && <Loader page=\"/cards\" />}\n      {users.length > 0 && totalUsersCount !== users.length && (\n        <Button\n          text=\"Load more\"\n          onClick={handleLoadMore}\n          disabled={totalUsersCount <= users?.length}\n        />\n      )}\n    </Container>\n  );\n}\n\nexport default CardList;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { setFilterValue } from \"redux/filtersSlice\";\nimport { selectFilter } from \"redux/selectors\";\nimport { filterOptions } from \"../redux/contants\";\nimport CreatableSelect from \"react-select/creatable\";\n\nexport const Dropdown = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleFilterChange = (filter) => {\n    if (!filter) {\n      dispatch(setFilterValue(filterOptions[0]));\n      return;\n    }\n    dispatch(setFilterValue(filter));\n  };\n\n  return (\n    <>\n      <CreatableSelect\n        id={filter.value}\n        name={filter.label}\n        defaultValue={filterOptions[0]}\n        defaultChecked={true}\n        options={filterOptions}\n        getOptionLabel={(option) =>\n          window.innerWidth < 768 ? option.label : `Show ${option.label}`\n        }\n        getOptionValue={(option) => option.value}\n        onChange={(selectedOption) => {\n          handleFilterChange(selectedOption);\n        }}\n        placeholder=\"Show...\"\n        isSearchable={true}\n        clearValue={() => {\n          dispatch(setFilterValue(filterOptions[0]));\n        }}\n        controlShouldRenderValue={true}\n        styles={{\n          control: (baseStyles) => ({\n            ...baseStyles,\n            width: window.innerWidth < 768 ? \"155px\" : \"200px\",\n            borderRadius: \"25px\",\n            backgroundColor: \"#fff\",\n            border: \"2px solid #bcb5d2\",\n            \"&:hover\": {\n              borderColor: \"#7458b2\",\n            },\n            \"&:focus\": {\n              borderColor: \"#7458b2\",\n            },\n            \"&:focus-within\": {\n              borderColor: \"#7458b2\",\n              outline: \"none\",\n            },\n          }),\n          menu: (baseStyles) => ({\n            ...baseStyles,\n            boxShadow: \"0 0 10px 0 rgba(0, 0, 0, 0.1)\",\n            borderRadius: \"6px\",\n          }),\n          option: (baseStyles, state) => ({\n            ...baseStyles,\n            overflow: \"hidden\",\n            color: state.isSelected ? \"#fff\" : \"#333\",\n            backgroundColor: state.isSelected ? \"#56a68d\" : \"#fff\",\n            \"&:hover\": {\n              backgroundColor: state.isSelected ? \"#56a68d\" : \"#8cbfb9\",\n              color: \"#fff\",\n            },\n          }),\n          input: (baseStyles) => ({\n            ...baseStyles,\n            color: \"#333\",\n            outline: \"none\",\n          }),\n        }}\n      />\n    </>\n  );\n};\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { IoMdArrowBack } from \"react-icons/io\";\n\nexport const StyledArrowIcon = styled(IoMdArrowBack)`\n  font-size: 25px;\n  color: #5736a3;\n\n  :hover {\n    color: #2b278c;\n    background-color: #e7bb44;\n  }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: flex;\n  align-items: baseline;\n  justify-content: left;\n  padding: 5px;\n  margin: 0;\n  text-align: start;\n  background-color: #f1c232;\n  border-radius: 50%;\n\n  @media screen and (min-width: 1200px) {\n    margin-left: 15px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 24px;\n  text-align: center;\n  padding: 0;\n  margin: 0 auto;\n\n  @media screen and (max-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  margin-top: 30px;\n  align-items: center;\n\n  @media screen and (max-width: 1199px) {\n    margin: 20px 20px 0;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  margin-top: 30px;\n  align-items: center;\n  justify-content: end;\n\n  @media screen and (max-width: 1199px) {\n    margin: 20px 20px 0;\n  }\n`;\n","import CardList from \"components/CardList/CardList\";\nimport { Dropdown } from \"components/DropDown\";\nimport {\n  StyledArrowIcon,\n  StyledNavLink,\n  Title,\n  Wrapper,\n  InputWrapper,\n} from \"./Tweets.styled\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchFilteredUsers } from \"redux/operations\";\nimport { selectFilter } from \"redux/selectors\";\n\nconst Tweets = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    dispatch(fetchFilteredUsers({ filter, signal: controller.signal })).catch(\n      (err) => {\n        console.error(err);\n      }\n    );\n    return () => controller.abort();\n  }, [dispatch, filter]);\n\n  return (\n    <>\n      <Wrapper>\n        <StyledNavLink to=\"/\">\n          <StyledArrowIcon />\n        </StyledNavLink>\n        <Title>Tweets</Title>\n      </Wrapper>\n      <InputWrapper>\n        <Dropdown />\n      </InputWrapper>\n      <CardList /* allFilteredUsers={} */></CardList>{\" \"}\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["selectUsersCount","state","users","userCount","selectFilter","filters","selectFilteredUsers","createSelector","items","filter","value","user","isFollowing","selectIsLoading","isLoading","StyledButton","styled","_templateObject","_taggedTemplateLiteral","props","text","Button","_ref","onClick","_ref$disabled","disabled","_jsx","children","Card","logoGoIT","backgroundImagex1","backgroundImagex2","Avatar","_templateObject2","ImageContainer","_templateObject3","Info","_templateObject4","StyledText","_templateObject5","dispatcher","useDispatch","_jsxs","src","avatar","alt","name","NumericFormat","tweets","displayType","thousandSeparator","followers","toggleFollow","_objectSpread","List","Container","_useState","useState","_useState2","_slicedToArray","page","setPage","dispatch","useSelector","totalUsersCount","limit","window","innerWidth","useEffect","controller","AbortController","fetchUsersByPage","signal","catch","err","console","error","abort","map","TweetCard","id","Loader","length","then","Dropdown","_Fragment","CreatableSelect","label","defaultValue","filterOptions","defaultChecked","options","getOptionLabel","option","concat","getOptionValue","onChange","selectedOption","setFilterValue","handleFilterChange","placeholder","isSearchable","clearValue","controlShouldRenderValue","styles","control","baseStyles","width","borderRadius","backgroundColor","border","borderColor","outline","menu","boxShadow","overflow","color","isSelected","input","StyledArrowIcon","IoMdArrowBack","StyledNavLink","NavLink","Title","Wrapper","InputWrapper","fetchFilteredUsers","to","CardList"],"sourceRoot":""}