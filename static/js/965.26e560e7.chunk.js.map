{"version":3,"file":"static/js/965.26e560e7.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.js","pages/UserProfile/UserProfile.styled.js","pages/UserProfile/UserProfile.js","redux/selectors.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledButton = styled.button`\n  width: fit-content;\n  margin: 0 auto;\n  padding: 14px 56px;\n  font-family: \"Montserrat\", sans-serif;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 24.38px;\n  text-transform: uppercase;\n  color: #373737;\n  border-radius: 10.31px;\n  border: none;\n  box-shadow: ${(props) =>\n    props.text === \"Load more\"\n      ? \"0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08)\"\n      : \"0px 3.44px rgba(0, 0, 0, 0.25)\"};\n  background-color: ${(props) => {\n    switch (props.text) {\n      case \"Load more\":\n        return \"#f1c232\";\n      case \"Follow\":\n        return \"ebd8ff\";\n      default:\n        return \"#5CD3A8\";\n    }\n  }};\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: ${(props) =>\n      props.text === \"Load more\" ? \"#e7bb44\" : \"rgb(86, 166, 141);\"};\n  }\n`;\n","import { StyledButton } from \"./Button.styled\";\n\nexport const Button = ({ text, onClick, disabled = false }) => {\n  return (\n    <StyledButton onClick={onClick} disabled={disabled} text={text}>\n      {text}\n    </StyledButton>\n  );\n};\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { IoMdArrowBack } from \"react-icons/io\";\n\nexport const ProfileInfo = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  justify-content: start;\n  align-items: start;\n  margin-right: 10px;\n  margin-left: 10px;\n`;\n\nexport const StyledArrowIcon = styled(IoMdArrowBack)`\n  font-size: 25px;\n  color: #5736a3;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  width: 25px;\n  height: 25px;\n  padding: 5px;\n  margin: 0;\n  text-align: start;\n  background-color: #f1c232;\n  border-radius: 50%;\n\n  :hover {\n    color: #2b278c;\n    background-color: #e7bb44;\n  }\n\n  @media screen and (min-width: 1200px) {\n    margin-left: 15px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  margin-top: 30px;\n  align-items: center;\n\n  @media screen and (max-width: 1199px) {\n    margin: 20px 20px 0;\n  }\n`;\n\nexport const ProfilePicture = styled.img`\n  width: 128px;\n  height: 128px;\n  border-radius: 50%;\n  object-fit: cover;\n  margin-right: 10px;\n`;\n\nexport const ProfileName = styled.div`\n  font-size: 24px;\n  font-weight: bold;\n\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n`;\n\nexport const ProfileUsername = styled.div`\n  font-size: 20px;\n  margin-top: 8px;\n  color: #808080;\n`;\n\nexport const ProfileStats = styled.div`\n  display: flex;\n  justify-content: start;\n  flex-direction: column;\n  align-items: start;\n  gap: 5px;\n  margin: 0 10px;\n`;\n\nexport const ProfileStatItem = styled.p`\n  font-size: 20px;\n  padding: 10px 0;\n  margin: 0;\n`;\n\nexport const ProfileColor = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n  display: flex;\n  justify-content: start;\n  align-items: center;\n\n  span {\n    margin-left: 5px;\n    display: block;\n    width: 16px;\n    height: 16px;\n    background-color: ${(props) => props.color};\n  }\n`;\n","import { useRef, useEffect } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectSeletedUser /* , selectIsLoading */ } from \"redux/selectors\";\nimport { getUserById, toggleFollow } from \"redux/operations\";\nimport { NumericFormat } from \"react-number-format\";\n/* import Loader from \"components/Skeleton\"; */\nimport { Button } from \"components/Button/Button\";\nimport {\n  ProfileInfo,\n  StyledArrowIcon,\n  StyledNavLink,\n  Wrapper,\n  ProfilePicture,\n  ProfileName,\n  ProfileUsername,\n  ProfileStatItem,\n  ProfileStats,\n} from \"./UserProfile.styled\";\n\nconst UserProfile = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? \"/\");\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const user = useSelector(selectSeletedUser);\n  /* const isLoading = useSelector(selectIsLoading); */\n\n  console.log(id);\n  console.log(user);\n\n  useEffect(() => {\n    dispatch(getUserById(id));\n  }, [dispatch, id, user]);\n\n  const handleFollowClick = () => {\n    dispatch(\n      toggleFollow({\n        ...user,\n        isFollowing: !user.isFollowing,\n        followers: user.isFollowing ? user.followers - 1 : user.followers + 1,\n      })\n    );\n  };\n\n  return (\n    <>\n      {/* {isLoading && <Loader page={`/user/${id}`} />} */}\n      <Wrapper>\n        <StyledNavLink to={backLinkLocationRef.current}>\n          <StyledArrowIcon />\n        </StyledNavLink>\n      </Wrapper>\n\n      {user ? (\n        <>\n          <Wrapper>\n            <ProfilePicture\n              src={user?.avatar}\n              alt={user?.name}\n              width=\"128\"\n              height=\"128\"\n              loading=\"lazy\"\n              style={{ backgroundColor: \"#ebebeb\" }}\n            />\n            <ProfileInfo>\n              <ProfileName>\n                {user.name} {user.emoji}\n              </ProfileName>\n              <ProfileUsername>@{user?.username}</ProfileUsername>\n              <ProfileUsername>{user.address}</ProfileUsername>\n            </ProfileInfo>\n            <ProfileStats>\n              <ProfileStatItem>\n                <NumericFormat\n                  value={user.tweets}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                />\n                {user.tweets === 1 ? \" tweet\" : \" tweets\"}\n              </ProfileStatItem>\n              <ProfileStatItem>\n                <NumericFormat\n                  value={user.followers}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                />{\" \"}\n                {user.tweets === 1 ? \"follower\" : \"followers\"}\n              </ProfileStatItem>\n            </ProfileStats>\n          </Wrapper>\n          <Button\n            text={user.isFollowing ? \"Following\" : \"Follow\"}\n            onClick={handleFollowClick}\n          ></Button>\n        </>\n      ) : (\n        <p>Sorry, we didn't find the {user?.name}</p>\n      )}\n    </>\n  );\n};\n\nexport default UserProfile;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectUsers = (state) => state.users.items;\n\nexport const selectUsersCount = (state) => state.users.userCount;\n\nexport const selectFollowingUsers = (state) =>\n  state.users.items?.filter((user) => user.isFollowing);\n\nexport const selectNotFollowingUsers = (state) =>\n  state.users.items?.filter((user) => !user.isFollowing);\n\nexport const selectFilter = (state) => state.filters;\n\nexport const selectFilteredUsers = createSelector(\n  [selectUsers, selectFilter],\n  (users, filter) => {\n    switch (filter.value) {\n      case \"all\":\n        return users;\n      case \"followed\":\n        return users.filter((user) => user.isFollowing);\n      case \"notFollowed\":\n        return users.filter((user) => !user.isFollowing);\n      default:\n        return;\n    }\n  }\n);\n\nexport const selectSeletedUser = (state) => state.users.selectedUser;\n\nexport const selectUserWithMostTweets = (state) =>\n  state.users.userWithMostTweets;\n\nexport const selectUserWithMostFollowers = (state) =>\n  state.users.userWithMostFollowers;\n\nexport const selectAllUsers = (state) => state.users.allUsers;\n\n/* export const selectFilteredAllUsers = createSelector(\n  [selectUsers, selectFilterValue],\n  (users, filterValue) => {\n    return users.filter(user => {\n      return (\n        user.name.toLowerCase().includes(filterValue.toLowerCase().trim()) ||\n        user.nickname.includes(filterValue.toLowerCase().trim())\n      );\n    });\n  }\n); */\n\nexport const selectIsLoading = (state) => state.users.isLoading;\n\nexport const selectError = (state) => state.users.error;\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","props","text","Button","_ref","onClick","_ref$disabled","disabled","_jsx","children","ProfileInfo","StyledArrowIcon","IoMdArrowBack","_templateObject2","StyledNavLink","NavLink","_templateObject3","Wrapper","_templateObject4","ProfilePicture","_templateObject5","ProfileName","_templateObject6","ProfileUsername","_templateObject7","ProfileStats","_templateObject8","ProfileStatItem","_templateObject9","_templateObject10","color","_location$state$from","_location$state","location","useLocation","backLinkLocationRef","useRef","state","from","dispatch","useDispatch","id","useParams","user","useSelector","selectSeletedUser","console","log","useEffect","getUserById","_jsxs","_Fragment","to","current","src","avatar","alt","name","width","height","loading","style","backgroundColor","emoji","username","address","NumericFormat","value","tweets","displayType","thousandSeparator","followers","isFollowing","toggleFollow","_objectSpread","selectUsersCount","users","userCount","selectFilter","filters","selectFilteredUsers","createSelector","items","filter","selectedUser","selectUserWithMostTweets","userWithMostTweets","selectUserWithMostFollowers","userWithMostFollowers","selectAllUsers","allUsers","selectIsLoading","isLoading"],"sourceRoot":""}